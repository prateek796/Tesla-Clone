{"version":3,"sources":["features/Car/CarSlice.js","Components/Header.js","Components/Section.js","Components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Container","styled","div","Menu","RightMenu","CustomMenu","MenuIcon","BurgerNav","props","show","CloseWrapper","CustomClose","CloseIcon","Header","useState","BurgerStatus","setBurgerStatus","useSelector","href","src","alt","onClick","Wrap","bgImage","ItemText","ButtonGroup","LeftButton","RightButton","DownArrow","img","Buttons","section","title","description","leftBtnTxt","rightBtnTxt","backgroundImg","bottom","Home","Section","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7319c30.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    cars: [\"Model S\" , \"Model 3\" , \"Model X\" , \"Model Y\"]\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name : \"car\",\r\n    initialState,\r\n    reducers : {}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSlice.reducer\r\n\r\n","import React , {useState}from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {selectCars} from '../features/Car/CarSlice'\r\nimport {useSelector } from 'react-redux'\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [BurgerStatus , setBurgerStatus] = useState(false);\r\n    const cars = useSelector(selectCars)\r\n    return (\r\n        <Container>\r\n            <a href=\"google.com\">\r\n                <img src=\"/images/logo.svg\" alt=\"\"></img>\r\n            </a>\r\n            <Menu>\r\n                <a href=\"#\">Model S</a>\r\n\r\n                <a href=\"#\">Model Y</a>\r\n\r\n                <a href=\"#\">Model 3</a>\r\n\r\n                <a href=\"#\">Model X</a>\r\n\r\n            </Menu>\r\n            <RightMenu>\r\n                <a href=\"#\">Shop</a>\r\n\r\n                <a href=\"#\">Account</a>\r\n\r\n                <CustomMenu onClick={()=> setBurgerStatus(true)  }/>\r\n                <BurgerNav show ={BurgerStatus}>\r\n                    <CloseWrapper>\r\n                        <CustomClose  onClick={()=> setBurgerStatus(false)  } />\r\n                    </CloseWrapper>\r\n                    <li><a href=\"#\">Existing Inventory</a></li>\r\n                    <li><a href=\"#\">Used Inventory</a></li>\r\n                    <li><a href=\"#\">Test Drive</a></li>\r\n                    <li><a href=\"#\">Roadster</a></li>\r\n                    <li><a href=\"#\">Semi</a></li>\r\n                    <li><a href=\"#\">Charging</a></li>\r\n                    <li><a href=\"#\">Power Wall</a></li>\r\n                    <li><a href=\"#\">Commercial Energy</a></li>\r\n                    <li><a href=\"#\">Utilities</a></li>\r\n                    <li><a href=\"#\">Find Us</a></li>\r\n                    <li><a href=\"#\">Support</a></li>\r\n                </BurgerNav>\r\n\r\n            </RightMenu>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    min-height : 60px;\r\n    position : fixed;\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content : space-between;\r\n    padding : 0 20px;\r\n    top : 0;\r\n    left : 0;\r\n    right : 0;\r\n    z-index : 1;\r\n`\r\nconst Menu = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content : center;\r\n    flex : 1;\r\n\r\n    a{\r\n        font-weight : 600;\r\n        text-transform : uppercase;\r\n        padding : 0 10px;\r\n    }\r\n\r\n    @media (max-width : 768px){\r\n        display : none;\r\n    }\r\n\r\n\r\n`\r\nconst RightMenu = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content : center;\r\n\r\na{\r\n    font-weight : 600;\r\n    text-transform : uppercase;\r\n    padding : 0 10px;\r\n    margin-right : 10px;\r\n}\r\n`\r\n\r\nconst CustomMenu = styled(MenuIcon)`\r\n    cursor : pointer;\r\n`\r\n\r\nconst BurgerNav = styled.div`\r\n    position : fixed;\r\n    background : white;\r\n    z-index : 2;\r\n    width : 300px;\r\n    top : 0;\r\n    bottom: 0;\r\n    right : 0;\r\n    list-style: none;\r\n    padding : 20px;\r\n    display : flex;\r\n    flex-direction : column;\r\n    text-align : start;\r\n    justify-content : space-evenly;\r\n    transform : ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition : transform 0.2s ease-in;\r\n\r\n    li{\r\n        padding : 15px 0;\r\n        border-bottom : 1px solid black;\r\n        a{\r\n            font-weight:600;\r\n        }\r\n    }\r\n`\r\n\r\nconst CloseWrapper =styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n`\r\n\r\nconst CustomClose = styled(CloseIcon)`\r\n    cursor : pointer;\r\n`\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nfunction section({ title, description, leftBtnTxt, rightBtnTxt, backgroundImg }) {\r\n    return (\r\n        <Wrap bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </ItemText>\r\n            </Fade>\r\n            <Fade bottom>\r\n                <Buttons>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftBtnTxt}\r\n                        </LeftButton>\r\n                        {rightBtnTxt &&\r\n                            <RightButton>\r\n                                {rightBtnTxt}\r\n                            </RightButton>\r\n                        }\r\n                    </ButtonGroup>\r\n                    <DownArrow src=\"/images/down-arrow.svg\"></DownArrow>\r\n                </Buttons>\r\n            </Fade>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nconst Wrap = styled.div`\r\n    width : 100vw;\r\n    height : 100vh;\r\n    background-image : ${props => `url(\"/images/${props.bgImage}\")`};\r\n    background-size : cover;\r\n    background-position : center;\r\n    background-repeat : no-repeat;\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : space-between;\r\n    align-items : center;\r\n`\r\nconst ItemText = styled.div`\r\n    padding-top : 15vh;\r\n    text-align : center;\r\n`\r\nconst ButtonGroup = styled.div`\r\n    display : flex;\r\n    margin-bottom : 30px;\r\n    @media (max-width : 768px){\r\n        flex-direction : column;\r\n    }\r\n\r\n`\r\nconst LeftButton = styled.div`\r\n    border-radius : 100px;\r\n    background-color : rgba(23,26,32,0.8);\r\n    height : 40px;\r\n    width : 256px;\r\n    color : white;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    cursor : pointer;\r\n    opacity : 0.85;\r\n    text-transform : uppercase;\r\n    font-size : 12px;\r\n    margin : 8px;\r\n`\r\nconst RightButton = styled(LeftButton)`\r\n    background-color : white;\r\n    opacity : 0.65;\r\n    color : black;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n    height : 40px;\r\n    overflow-x : hidden;\r\n    animation : animateDown infinite 1.5s;\r\n`\r\nconst Buttons = styled.div`\r\n\r\n`\r\n\r\n\r\nexport default section\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Section from './Section'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section\r\n                title=\"Model S\"\r\n                description=\"Order Online For Touchless Delivery\"\r\n                leftBtnTxt=\"Custom Order\"\r\n                rightBtnTxt=\"Existing Inventory\"\r\n                backgroundImg=\"model-s.jpg\" />\r\n            <Section\r\n                title=\"Model Y\"\r\n                description=\"Order Online For Touchless Delivery\"\r\n                leftBtnTxt=\"Custom Order\"\r\n                rightBtnTxt=\"Existing Inventory\"\r\n                backgroundImg=\"model-y.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Model 3\"\r\n                description=\"Order Online For Touchless Delivery\"\r\n                leftBtnTxt=\"Custom Order\"\r\n                rightBtnTxt=\"Existing Inventory\"\r\n                backgroundImg=\"model-3.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Model X\"\r\n                description=\"Order Online For Touchless Delivery\"\r\n                leftBtnTxt=\"Custom Order\"\r\n                rightBtnTxt=\"Existing Inventory\"\r\n                backgroundImg=\"model-x.jpg\" />\r\n            <Section\r\n                title=\"Solar Panels\"\r\n                description=\"Lowest Cost Solar Panels in America\"\r\n                leftBtnTxt=\"Order Now\"\r\n                rightBtnTxt=\"Learn More\"\r\n                backgroundImg=\"solar-panel.jpg\" />\r\n            <Section\r\n                title=\"Solar Roof\"\r\n                description=\"Produce Clean Energy From Your Roof\"\r\n                leftBtnTxt=\"Order Now\"\r\n                rightBtnTxt=\"Learn More\"\r\n                backgroundImg=\"solar-roof.jpg\" />\r\n            <Section\r\n                title=\"Accessories\"\r\n                leftBtnTxt=\"Shop Now\"\r\n                backgroundImg=\"accessories.jpg\" />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    height : 100vh;\r\n`\r\nexport default Home\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header'\nimport Home from './Components/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header /> \n     <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/Car/CarSlice';\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}